<UserControl
    x:Class="CodeWriter_WinUI.CodeWriter"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CodeWriter_WinUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:xaml="using:Microsoft.Graphics.Canvas.UI.Xaml"
    mc:Ignorable="d"
    FontFamily="Consolas" Background="{ThemeResource SystemControlAcrylicWindowBrush}" IsTextScaleFactorEnabled="False" TabIndex="0" AllowFocusOnInteraction="True"  IsFocusEngagementEnabled="True"
    x:DefaultBindMode="OneWay"
    >
    <UserControl.ContextFlyout>
        <MenuFlyout x:Name="ContextMenu" >
            <MenuFlyoutItem Text="Copy" Command="{x:Bind Command_Copy}" IsEnabled="{x:Bind IsSelection}" >
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Copy"></SymbolIcon>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="Control" Key="C"  Invoked="KeyboardAccelerator_Invoked"/>
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem Text="Paste" Command="{x:Bind Command_Paste}" >
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Paste"></SymbolIcon>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="Control" Key="V" Invoked="KeyboardAccelerator_Invoked" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem Text="Cut" Command="{x:Bind Command_Cut}" IsEnabled="{x:Bind IsSelection}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Cut"></SymbolIcon>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="Control" Key="X"  Invoked="KeyboardAccelerator_Invoked"/>
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem Text="Delete" Command="{x:Bind Command_Delete}" IsEnabled="{x:Bind IsSelection}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Delete"></SymbolIcon>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Back" Invoked="KeyboardAccelerator_Invoked" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem Text="Select all" Command="{x:Bind Command_SelectAll}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="SelectAll"></SymbolIcon>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="A" Modifiers="Control" Invoked="KeyboardAccelerator_Invoked" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            
            <MenuFlyoutSeparator />
        </MenuFlyout>
    </UserControl.ContextFlyout>
    <ScrollViewer x:Name="Scroll" IsScrollInertiaEnabled="True" KeyDown="Scroll_KeyDown" KeyUp="Scroll_KeyUp"  CanBeScrollAnchor="True" PointerWheelChanged="Scroll_PointerWheelChanged"  HorizontalScrollMode="Enabled" HorizontalScrollBarVisibility="Visible" VerticalScrollMode="Enabled" IsDeferredScrollingEnabled="True"   SizeChanged="Scroll_SizeChanged" >
        <ScrollViewer.Template>
            <ControlTemplate  TargetType="ScrollViewer">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ScrollContentPresenter Grid.Column="0" x:Name="ScrollContent" CanContentRenderOutsideBounds="False"  ManipulationMode="TranslateX,TranslateY,TranslateInertia,Scale" ManipulationStarted="ScrollContent_ManipulationStarted"  ManipulationDelta="ScrollContent_ManipulationDelta"  />
                    <ScrollBar  x:Name="VerticalScroll" Grid.Column="1" Loaded="VerticalScroll_Loaded" PointerEntered="VerticalScroll_PointerEntered"
                                    Value="0" SmallChange="10" LargeChange="100" ValueChanged="VerticalScroll_ValueChanged"
                                    Maximum="500" Width="12"
                                    ViewportSize="{TemplateBinding ViewportHeight}" 
                                    Visibility="Visible"  HorizontalAlignment="Right"/>

                    <ScrollBar x:Name="HorizontalScroll" Loaded="HorizontalScroll_Loaded" PointerEntered="VerticalScroll_PointerEntered"
                                    Orientation="Horizontal" SmallChange="10" LargeChange="100"  ValueChanged="HorizontalScroll_ValueChanged"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Value="0"
                                    Maximum="500"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Visibility="Visible"/>
                </Grid>
            </ControlTemplate>
        </ScrollViewer.Template>

        <Grid  Background="{x:Bind Background}" >
            <Grid x:Name="TextControl" PointerMoved="TextControl_PointerMoved" PointerPressed="TextControl_PointerPressed" PointerReleased="TextControl_PointerReleased" PointerCaptureLost="TextControl_PointerReleased" PointerCanceled="TextControl_PointerReleased" PointerExited="TextControl_PointerReleased">
            <xaml:CanvasControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="CanvasSelection" Draw="CanvasSelection_Draw"></xaml:CanvasControl>
            <xaml:CanvasControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  x:Name="CanvasText" CreateResources="CanvasText_CreateResources" Draw="CanvasText_Draw" ></xaml:CanvasControl>
            <xaml:CanvasControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="CanvasBeam" Draw="CanvasBeam_Draw"></xaml:CanvasControl>
                <ItemsControl></ItemsControl>
            </Grid>
            <ListBox Background="{ThemeResource SystemControlAcrylicElementBrush}" MaxWidth="200" MaxHeight="140" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{x:Bind IsSuggesting}" ItemsSource="{x:Bind Suggestions}" SelectedIndex="{x:Bind SuggestionIndex, Mode=TwoWay}" >
                <ListBox.RenderTransform>
                    <TranslateTransform X="{x:Bind CursorPoint.X}" Y="{x:Bind CursorPoint.Y}"></TranslateTransform>
                </ListBox.RenderTransform>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Margin" Value="0"></Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <TextBlock Text="{Binding Text}"></TextBlock>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

    </ScrollViewer>
</UserControl>
